out/run_*/
# macOS Finder metadata
.DS_Store

# Ignore local context data files generated by tests/SDK
client/data/

# Ignore Obsidian workspace configuration files
.obsidian/
tracker.json
benchmark.log

# Binaries for programs and plugins
*.exe
*.exe~
*.dll
*.so
*.dylib

# Test binary, built with `go test -c`
*.test

# Output of the go coverage tool, specifically when used with LiteIDE
*.out

# Dependency directories (remove the comment below to include it)
# vendor/

# Go workspace file
go.work.sum

# Environment variables
.env
.envrc
.env.local
.env.development
.env.test
.env.production

# IDE settings
.idea/
.vscode/
*.iml

# IntelliJ IDEA specific (from .idea/.gitignore)
.idea/shelf/
.idea/workspace.xml
.idea/httpRequests/
.idea/dataSources/
.idea/dataSources.local.xml

# Build output
build/
dist/

# Log files
*.log

# Operating system files
.DS_Store
Thumbs.db

# Process ID files
*.pid

# Temporary files
*.tmp
*.temp

# Local development files
.env
.env.local
.env.*.local

# Python virtual environments
venv/
.venv/
clients/go/venv/

# Python cache directories and files
__pycache__/
*.py[cod]
*.pyc
*.pyo
*$py.class
*.so

# Python test cache
.pytest_cache/

# Configuration files with secrets (keep example files)
configs/config.local.yaml
configs/config.development.yaml
configs/config.staging.yaml
# Keep configs/config.yaml, configs/config.testing.yaml, configs/config.production.yaml as examples

# Credentials and keys
*.key
*.pem
*.p12
service-account*.json
credentials*.json

# Build artifacts
/bin/
/server/bin/
/dist/
/build/

# Compiled Go binaries (should be built, not committed)
cmd/*/memory-service
cmd/*/mycelian-mcp-server
cmd/*/outbox-worker
tools/*/mycelianCli
tools/*/synapse
tools/*/memoryctl
tools/*/mycelian-service-tools
tools/*/waviate-tool

.obsidian/

# Local database files
*.db
*.db-shm
*.db-wal
memory.db
.kiro/

# Secrets directory
secrets/

# Config overrides
config.local.yml
config.local.yaml

# Test coverage
coverage.out
coverage.html
.coverage

# Data
data/

# LongMemEval Benchmarker specific
tools/longmemeval-benchmarker/out/
tools/longmemeval-benchmarker/huey_orchestrator/out/
tools/longmemeval-benchmarker/data/*.db*
tools/longmemeval-benchmarker/huey_orchestrator/data/*.db*
tools/longmemeval-benchmarker/huey_orchestrator.log
tools/longmemeval-benchmarker/todo
tools/longmemeval-benchmarker/logs/*/

# Large dataset files (keep only small test datasets in git)
tools/longmemeval-benchmarker/longmemeval-datasets/longmemeval_s.json
tools/longmemeval-benchmarker/longmemeval-datasets/longmemeval_m.json

# Root level files that should be ignored
huey_orchestrator.log

memory-bank/
.cursor/
.cursorignore

# LongMemEval Benchmarker (top-level path) â€” ignore local outputs and datasets
longmemeval-benchmarker/out/
longmemeval-benchmarker/huey_orchestrator/out/
longmemeval-benchmarker/data/
longmemeval-benchmarker/data/*.db*
longmemeval-benchmarker/huey_orchestrator/data/*.db*
longmemeval-benchmarker/huey_orchestrator.log
longmemeval-benchmarker/todo
longmemeval-benchmarker/logs/
longmemeval-benchmarker/logs/*/
longmemeval-benchmarker/*.log
longmemeval-benchmarker/longmemeval-local-datasets/
longmemeval-benchmarker/config-local/
